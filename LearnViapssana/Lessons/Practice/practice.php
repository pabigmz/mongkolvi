<?php
// üöÄ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Chrome ‡πÅ‡∏Ñ‡∏ä
header("Cache-Control: no-store, no-cache, must-revalidate, max-age=0");
header("Cache-Control: post-check=0, pre-check=0", false);
header("Pragma: no-cache");
header("Expires: Sat, 01 Jan 2000 00:00:00 GMT");

session_start();
if ($_SERVER['REQUEST_URI'] == '/favicon.ico') {
    header("Content-Type: image/x-icon");
    readfile("favicon.ico");
    exit();
}

if (!isset($_SESSION['role'])) {
    header("Location:../../login/login.php");
    exit();
}

include('../../includes/connect.php');
include('../log-inline.php');

// ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ‡∏ñ‡πâ‡∏≤ `id` ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤
$pracId = isset($_GET['id']) ? $_GET['id'] : null;
if (!$pracId) {
    echo json_encode(["status" => "error", "message" => "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ practice_id"]);
    exit();
}

$userId = $_SESSION['user_id'];

// ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ watch time ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
try {
    $stmt = $conn->prepare("SELECT video_watch_time FROM user_practice_progress WHERE user_id = :user_id AND practice_id = :pracId");
    $stmt->execute(['user_id' => $userId, 'pracId' => $pracId]);
    $progress = $stmt->fetch(PDO::FETCH_ASSOC);
    $currentWatchTime = isset($progress['video_watch_time']) ? (int)$progress['video_watch_time'] : 0;

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
    $stmt = $conn->prepare("SELECT * FROM practice WHERE practice_id = :pracId");
    $stmt->execute(['pracId' => $pracId]);
    $practices = $stmt->fetch(PDO::FETCH_ASSOC);
    $duration = $practices['duration'];
    $successTime = ($duration * 90) / 100; // ‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏π‡∏ñ‡∏∂‡∏á 90% ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
} catch (Exception $e) {
    echo "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage();
    exit();
}

// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress ‡πÄ‡∏õ‡πá‡∏ô 40 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏£‡∏ö 90%
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    header("Content-Type: application/json"); // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ response ‡πÄ‡∏õ‡πá‡∏ô JSON
    error_reporting(0); // ‚úÖ ‡∏õ‡∏¥‡∏î Warning ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏£‡∏ö‡∏Å‡∏ß‡∏ô response
    ini_set('display_errors', 0);

    if (isset($_POST['watch_time'])) {
        try {
            $watchTime = (int) $_POST['watch_time'];

            // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å watch_time ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            $stmt = $conn->prepare("UPDATE user_practice_progress SET video_watch_time = :watchTime WHERE user_id = :user_id AND practice_id = :pracId");
            $stmt->execute(['watchTime' => $watchTime, 'user_id' => $userId, 'pracId' => $pracId]);

            echo json_encode(["status" => "success", "message" => "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï watch_time ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"]);
        } catch (Exception $e) {
            error_log("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï watch_time: " . $e->getMessage());
            echo json_encode(["status" => "error", "message" => "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage()]);
        }
        exit();
    }

    if (isset($_POST['update_progress'])) {
        try {
            $stmt = $conn->prepare("SELECT progress FROM user_practice_progress WHERE user_id = :user_id AND practice_id = :pracId");
            $stmt->execute(['user_id' => $userId, 'pracId' => $pracId]);
            $currentProgress = (int) $stmt->fetchColumn();

            if ($currentProgress < 70) {
                $stmt = $conn->prepare("UPDATE user_practice_progress SET progress = 70, updated_at = NOW() WHERE user_id = :user_id AND practice_id = :pracId");
                $stmt->execute(['user_id' => $userId, 'pracId' => $pracId]);

                error_log("üöÄ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress: 70 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user_id: $userId, practice_id: $pracId");
                echo json_encode(["status" => "success", "message" => "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å progress = 70 ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"]);
            } else {
                echo json_encode(["status" => "no_update", "message" => "progress = 70 ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï"]);
            }
        } catch (Exception $e) {
            error_log("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress: " . $e->getMessage());
            echo json_encode(["status" => "error", "message" => "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage()]);
        }
        exit();
    }
}



?>

<!DOCTYPE html>
<html lang="th">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥ - <?php echo htmlspecialchars($practices['practice_title']); ?></title>

    <link rel="stylesheet" href="../../assets/css/Practice/practice.css?v=<?php echo time(); ?>">
    <style>
        .loading-message {
            font-size: 16px;
            font-weight: bold;
            color: #555;
            margin-top: 10px;
            text-align: center;
        }

        #videoContainer {
            display: none;
            /* üî• ‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à */
        }
    </style>
</head>

<body>

    <header>
        <div class="return">
            <a href="../"><i class='bx bx-left-arrow-alt'></i>‡∏Å‡∏•‡∏±‡∏ö</a>
        </div>
        <div class="logo">
        </div>
    </header>

    <main>
        <div class="container">
            <h2><?php echo htmlspecialchars($practices['practice_title']); ?></h2>
            <div id="loadingMessage" class="loading-message">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠...</div>
            <div id="videoContainer">
                <?php
                // ‡πÅ‡∏õ‡∏•‡∏á URL ‡∏à‡∏≤‡∏Å watch?v= ‡πÄ‡∏õ‡πá‡∏ô embed/
                $video_url = str_replace("watch?v=", "embed/", $practices['video_url']);
                ?>
                <iframe id="videoPlayer" src="<?php echo htmlspecialchars($video_url); ?>?enablejsapi=1" frameborder="0" allowfullscreen></iframe>

                <!-- ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏ï‡πá‡∏° -->
                <div class="link-full">
                    <p>‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏ä‡∏°<a href="https://www.youtube.com/watch?v=YzCNXCTYOA8" target="_blank">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</a></p>
                </div>

                <div class="btn-group">
                    <span id="trackingMessage" class="loading-message">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°...</span>
                </div>
            </div>
        </div>
    </main>

    <script>
        console.log("üîÑ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");
        let player;
        let maxWatchedTime = <?php echo $currentWatchTime; ?>;
        let successTime = <?php echo $successTime; ?>;
        let isTrackingStarted = false;
        let hasProgressUpdated = false;

        function onYouTubeIframeAPIReady() {
            console.log("üé¨ YouTube API ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß");

            let videoElement = document.getElementById('videoPlayer');
            if (!videoElement) {
                console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö videoPlayer - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö iframe");
                return;
            }

            player = new YT.Player(videoElement, {
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        function forceReloadYouTubeAPI() {
            console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î YouTube API ‡πÉ‡∏´‡∏°‡πà...");
            let oldScript = document.querySelector("script[src*='youtube.com/iframe_api']");
            if (oldScript) oldScript.remove();

            let newScript = document.createElement("script");
            newScript.src = "https://www.youtube.com/iframe_api?v=" + new Date().getTime();
            document.head.appendChild(newScript);
        }
        forceReloadYouTubeAPI();

        function onPlayerReady(event) {
            console.log("‚úÖ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡πà‡∏ô");
            document.getElementById("loadingMessage").style.display = "none";
            document.getElementById("videoContainer").style.display = "block";
            document.getElementById("trackingMessage").innerText = "‚ñ∂ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡πÄ‡∏•‡πà‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠";
        }

        function onPlayerStateChange(event) {
            if (event.data === YT.PlayerState.PLAYING) {
                console.log("‚ñ∂ ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô...");
                document.getElementById("trackingMessage").innerText = "‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠...";
                if (!isTrackingStarted) {
                    startTracking();
                    isTrackingStarted = true;
                }
            }
        }

        function startTracking() {
            setInterval(() => {
                let currentTime = Math.floor(player.getCurrentTime());

                // üî• ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏ï‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
                if (currentTime > maxWatchedTime + 10) {
                    console.warn("‚è™ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏°! ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà " + maxWatchedTime + " ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ");
                    player.seekTo(maxWatchedTime, true);
                } else {
                    maxWatchedTime = Math.max(maxWatchedTime, currentTime);
                    console.log(`‚è≥ ‡∏î‡∏π‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß: ${maxWatchedTime} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`);
                    saveWatchTime(maxWatchedTime);
                }

                if (maxWatchedTime >= successTime && !hasProgressUpdated) {
                    unlockNextButton();
                    saveProgress();
                    saveWatchTime(maxWatchedTime); // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤ 90% ‡∏î‡πâ‡∏ß‡∏¢
                    hasProgressUpdated = true;
                }
            }, 1000);
        }

        function saveProgress() {
            console.log("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å progress = 70 ...");

            let xhr = new XMLHttpRequest();
            xhr.open("POST", window.location.href, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

            xhr.onload = function() {
                try {
                    let response = JSON.parse(xhr.responseText);
                    console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress:", response);
                } catch (error) {
                    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á JSON:", xhr.responseText);
                }
            };

            xhr.send(`update_progress=70`);
        }

        function unlockNextButton() {
            console.log("üîì ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏° '‡∏ï‡πà‡∏≠‡πÑ‡∏õ'");
            let nextButton = document.querySelector(".btn-group span");
            if (nextButton) {
                nextButton.outerHTML = `<a href="./posttest.php?id=<?php echo $pracId; ?>">‡∏ï‡πà‡∏≠‡πÑ‡∏õ <i class='bx bx-right-arrow-alt'></i></a>`;
            }
        }

        function saveWatchTime(watchTime) {
            if (watchTime <= maxWatchedTime) return; // ‚ùå ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ã‡πâ‡∏≥

            let xhr = new XMLHttpRequest();
            xhr.open("POST", window.location.href, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

            xhr.onload = function() {
                console.log("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï watch_time:", xhr.responseText);
            };

            xhr.send(`watch_time=${watchTime}`);
        }

        // üî• ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤
        window.addEventListener("beforeunload", function() {
            console.log("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å watch_time ‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤:", maxWatchedTime);

            let formData = new FormData();
            formData.append("watch_time", maxWatchedTime);

            navigator.sendBeacon(window.location.href, formData);
        });
    </script>



</body>

</html>